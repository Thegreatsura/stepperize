{"files":[{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/index.mdx","data":{"lastModified":1726164504000,"frontmatter":{"title":"Introduction","description":"Introduction to @stepperize/react library","icon":"Album"},"toc":[{"title":"Thinking in Steps","url":"#thinking-in-steps","depth":2},{"title":"Common Use Cases for Steppers","url":"#common-use-cases-for-steppers","depth":3},{"title":"Thinking in Flows","url":"#thinking-in-flows","depth":2},{"title":"Using Stepperize for Flow Management","url":"#using-stepperize-for-flow-management","depth":3},{"title":"Stepperize FAQ","url":"#stepperize-faq","depth":2}],"structuredData":{"contents":[{"heading":"","content":"Stepperize is a library that allows to create a Stepper component in a simple and fast way."},{"heading":"","content":"The aim is to facilitate the creation of Steppers in web or mobile apps (React Native), allowing developers to focus on the business logic and not on the implementation of a Stepper."},{"heading":"thinking-in-steps","content":"When we talk about a Stepper, we usually think about a sequence of steps that the user must follow to complete a task.\nThis UI pattern guides users through a multi-step process, breaking down complex workflows into manageable chunks.\nSteppers typically display progress, provide clear navigation between steps, and often include visual cues like numbers or icons to represent each stage."},{"heading":"common-use-cases-for-steppers","content":"Steppers are versatile components that can be applied to various scenarios:"},{"heading":"common-use-cases-for-steppers","content":"User Onboarding: Guide new users through account setup, feature introduction, or initial configuration."},{"heading":"common-use-cases-for-steppers","content":"Multi-page Forms: Break long forms into logical sections, reducing cognitive load and improving completion rates."},{"heading":"common-use-cases-for-steppers","content":"Checkout Processes: Streamline e-commerce transactions by clearly separating steps like shipping, billing, and confirmation."},{"heading":"common-use-cases-for-steppers","content":"Product Creation Wizards: Assist users in creating complex items or configurations step-by-step."},{"heading":"common-use-cases-for-steppers","content":"Tutorial Walkthroughs: Introduce new features or guide users through complex processes within an application."},{"heading":"common-use-cases-for-steppers","content":"Survey or Questionnaire Flow: Present questions in a structured, sequential manner."},{"heading":"common-use-cases-for-steppers","content":"Booking Systems: Guide users through selecting dates, options, and completing reservations."},{"heading":"common-use-cases-for-steppers","content":"By implementing Steppers in these scenarios, you can enhance user experience, reduce errors, and make complex processes more manageable."},{"heading":"thinking-in-flows","content":"Stepperize isn't just limited to linear step-by-step processes. It can be extended to manage complex flows and conditional rendering based on various factors. This approach allows you to create dynamic, branching user experiences that adapt to user input or specific conditions."},{"heading":"using-stepperize-for-flow-management","content":"Conditional Rendering: Render different components or entire flows based on the current step or user choices."},{"heading":"using-stepperize-for-flow-management","content":"Branching Paths: Create decision trees where the next step depends on previous inputs or selections."},{"heading":"using-stepperize-for-flow-management","content":"Dynamic Forms: Adjust form fields or sections based on user responses in earlier steps."},{"heading":"using-stepperize-for-flow-management","content":"Personalized Experiences: Tailor the flow to user preferences, roles, or account types."},{"heading":"using-stepperize-for-flow-management","content":"State-Dependent UI: Change the interface based on the current state of the flow, such as showing different sidebars or navigation options."},{"heading":"using-stepperize-for-flow-management","content":"Multi-Path Processes: Handle complex workflows where users might need to complete different sets of steps based on their scenario."},{"heading":"using-stepperize-for-flow-management","content":"By leveraging Stepperize's flexibility, you can build sophisticated user interfaces that go beyond simple linear progressions, creating more responsive and user-centric applications."},{"heading":"stepperize-faq","content":"The Stepperize FAQ is a collection of useful questions and answers about the\nproject. If you have a question that isn't answered here, please\nopen a discussion."},{"heading":"stepperize-faq","content":"Yes, you can use Stepperize with React or any other React framework"},{"heading":"stepperize-faq","content":"Not at the moment. Initially Stepperize has a library called @stepperize/react, but we hope that the\ncommunity can contribute with different implementations for the other frameworks with @stepperize/vue,\n@stepperize/solid, etc."},{"heading":"stepperize-faq","content":"Yes, even all the examples you will see in the documentation are made with Shadcn."},{"heading":"stepperize-faq","content":"Yes, as Stepperize is a headless component, you can use it as you wish and style it as you wish.\nFun fact: this library was born as a PR for Shadcn UI."},{"heading":"stepperize-faq","content":"Yes, Stepperize is a headless component, so you can create your own logic and use the component as you wish."}],"headings":[{"id":"thinking-in-steps","content":"Thinking in Steps"},{"id":"common-use-cases-for-steppers","content":"Common Use Cases for Steppers"},{"id":"thinking-in-flows","content":"Thinking in Flows"},{"id":"using-stepperize-for-flow-management","content":"Using Stepperize for Flow Management"},{"id":"stepperize-faq","content":"Stepperize FAQ"}]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/installation.mdx","data":{"lastModified":1726164504000,"frontmatter":{"title":"Installation","description":"Learn how to install @stepperize/react library","icon":"Rocket"},"toc":[],"structuredData":{"contents":[{"heading":"","content":"You can install using NPM, Yarn,  PNPM or Bun."}],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/api-references/define.mdx","data":{"lastModified":1726164504000,"frontmatter":{"title":"Define","description":"How to define a stepper"},"toc":[{"title":"Creating our steps","url":"#creating-our-steps","depth":2},{"title":"Import the constructor","url":"#import-the-constructor","depth":3},{"title":"Create the steps","url":"#create-the-steps","depth":3}],"structuredData":{"contents":[{"heading":"","content":"The main idea is that we can define our IDs that will identify each step.\nWhen we define the steps, we get an object that contains everything we need to build our stepper."},{"heading":"import-the-constructor","content":"In order to create our steps we need to import the defineSteps from the library."},{"heading":"create-the-steps","content":"defineStepper is a function that allows us to get a Provider, a hook and the array of steps we are using.\nThe only mandatory value for each step is the id. Then, we can add whatever we need and this will be typesafe when we use the hook."},{"heading":"create-the-steps","content":"With this we have everything we need to be able to build our own Stepper with the styles and logic we want."},{"heading":"create-the-steps","content":"Read more about the use of the different parts here:"},{"heading":"create-the-steps","content":"Hook"},{"heading":"create-the-steps","content":"Scoped"}],"headings":[{"id":"creating-our-steps","content":"Creating our steps"},{"id":"import-the-constructor","content":"Import the constructor"},{"id":"create-the-steps","content":"Create the steps"}]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/api-references/hook.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Hook","description":"How to get access to all the methods of our defineStepper to be able to build our own stepper"},"toc":[{"title":"Usage","url":"#usage","depth":2},{"title":"How to render content","url":"#how-to-render-content","depth":2},{"title":"when","url":"#when","depth":3},{"title":"switch","url":"#switch","depth":3},{"title":"match","url":"#match","depth":3},{"title":"API","url":"#api","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The useStepper hook provides access to the actions needed to interact with the stepper.\nIt can be used with or without the Scoped component, but in this case it will be used without Scoped."},{"heading":"","content":"If you want to know how to use the stepper with the Scoped component, you can read the Scoped section."},{"heading":"how-to-render-content","content":"In Stepperize there are different patterns for rendering components or content within each step."},{"heading":"when","content":"The when function allows to render a component when the stepper is in a specific step."},{"heading":"when","content":"This function receives 3 parameters:"},{"heading":"when","content":"The first parameter is the step ID."},{"heading":"when","content":"The second parameter is a function that returns the component to render when the step matches the given ID."},{"heading":"when","content":"The third parameter is a function that returns the component to render when the step does not match the given ID."},{"heading":"when","content":"Also, you can use the when with the third parameter to render a component when the step is not in a specific step."},{"heading":"switch","content":"Like when, switch allows components to be rendered when the step id is matched,\nbut following the switch logical control structure."},{"heading":"switch","content":"This function receives an object with the step ID as the key and a function that returns\nthe component to render when the step matches the given ID."},{"heading":"match","content":"The match function allows to render a component when the stepper is in a specific step."},{"heading":"match","content":"Unlike when and switch, match does not allow a component to be rendered when the stepper is in a specific step.\nInstead, it allows a component to be rendered when the stepper is in a specific state."},{"heading":"match","content":"This allows us to have a state-based control that can come from either the client or the server side."},{"heading":"match","content":"Think of frameworks like Remix where you can have state management from the server with loaders and actions."},{"heading":"match","content":"This function receives 2 parameters:"},{"heading":"match","content":"The first parameter is the step ID."},{"heading":"match","content":"The second parameter is a function that returns the component to render when the step matches the given ID."},{"heading":"api","content":"The useStepper hook returns an object with the following properties:"}],"headings":[{"id":"usage","content":"Usage"},{"id":"how-to-render-content","content":"How to render content"},{"id":"when","content":"when"},{"id":"switch","content":"switch"},{"id":"match","content":"match"},{"id":"api","content":"API"}]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/api-references/scoped.mdx","data":{"lastModified":1726164504000,"frontmatter":{"title":"Scoped","description":"How to get access to the useStepper hook in a child component"},"toc":[{"title":"Usage","url":"#usage","depth":2},{"title":"API Reference","url":"#api-reference","depth":2},{"title":"Multiple Scopes","url":"#multiple-scopes","depth":2}],"structuredData":{"contents":[{"heading":"","content":"The Scoped component works as a provider and allows us to synchronise the state of steps via useStepper between child components."},{"heading":"usage","content":"Then, in the child component, we can use the useStepper hook to get the steps and use them."},{"heading":"usage","content":"The Scoped component is only necessary if we want a child component to have\naccess to the steps. Otherwise, we can use the hook directly at the same level\nwhere we render our code."},{"heading":"multiple-scopes","content":"We can have multiple scopes in our application. For example, we can have a global scope and a local scope."},{"heading":"multiple-scopes","content":"Finally, we can use the Global.useStepper on all children of GlobalStepper.Scoped and Local.useStepper on all children of LocalStepper.Scoped."}],"headings":[{"id":"usage","content":"Usage"},{"id":"api-reference","content":"API Reference"},{"id":"multiple-scopes","content":"Multiple Scopes"}]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/migration/migrating-to-v2.mdx","data":{"lastModified":1726164504000,"frontmatter":{"title":"Migrating to v2","description":"Learn how to migrate from v1 to v2","icon":"CircleFadingArrowUp"},"toc":[{"title":"Breaking Changes","url":"#breaking-changes","depth":2},{"title":"defineSteps helper","url":"#definesteps-helper","depth":3},{"title":"Stepper Provider","url":"#stepper-provider","depth":3},{"title":"useStepper hook","url":"#usestepper-hook","depth":3}],"structuredData":{"contents":[{"heading":"","content":"Stepperize v2 is a complete rewrite of the original Stepperize library. It comes with a few breaking changes and new features."},{"heading":"definesteps-helper","content":"The defineSteps function has been removed. Use defineStepper instead."},{"heading":"definesteps-helper","content":"Also, defineStepper only requires one id for each step and the type Step no longer\nhas any other value, since you can send it anything else in favour of automatic inference."},{"heading":"definesteps-helper","content":"For more information, see the Define section."},{"heading":"stepper-provider","content":"The Stepper component has been removed. Use Scoped from defineStepper object instead if you want to use with 1 or more Scopes of steps."},{"heading":"stepper-provider","content":"We don't need to pass the array of steps to the component anymore."},{"heading":"stepper-provider","content":"The Stepper component only accepts one prop, initialStep, which is the initial step to be active initially."},{"heading":"stepper-provider","content":"For more information, see the Scoped section."},{"heading":"usestepper-hook","content":"The useStepper hook has been removed. Use useStepper from defineStepper instead."},{"heading":"usestepper-hook","content":"For more information, see the Hook section."}],"headings":[{"id":"breaking-changes","content":"Breaking Changes"},{"id":"definesteps-helper","content":"defineSteps helper"},{"id":"stepper-provider","content":"Stepper Provider"},{"id":"usestepper-hook","content":"useStepper hook"}]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/migration/migrating-to-v3.mdx","data":{"lastModified":1726164504000,"frontmatter":{"title":"Migrating to v3","description":"Learn how to migrate from v2 to v3","icon":"CircleFadingArrowUp"},"toc":[{"title":"Breaking Changes","url":"#breaking-changes","depth":2},{"title":"Name changes in the values returned by the hook","url":"#name-changes-in-the-values-returned-by-the-hook","depth":3},{"title":"New Features","url":"#new-features","depth":2},{"title":"New switch method","url":"#new-switch-method","depth":3},{"title":"Add all property","url":"#add-all-property","depth":3}],"structuredData":{"contents":[{"heading":"","content":"Stepperize v3 brings with it a number of naming changes to make the pattern.\nIt also adds a switch method that allows to render in a simpler way the components we want for each step."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"The values returned by the useStepper hook have been renamed to make the pattern more consistent."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"currentStep is now current."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"isFirstStep is now isFirst."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"isLastStep is now isLast."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"getStepById is now get."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"goToNextStep is now next."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"goToPrevStep is now prev."},{"heading":"name-changes-in-the-values-returned-by-the-hook","content":"goToStep is now goTo."},{"heading":"new-switch-method","content":"The switch method has been added to the useStepper hook. This method allows us to render the components we want for each step in a simpler way."},{"heading":"add-all-property","content":"The all property has been added to the object returned by the useStepper hook. This property contains all the steps in the stepper."}],"headings":[{"id":"breaking-changes","content":"Breaking Changes"},{"id":"name-changes-in-the-values-returned-by-the-hook","content":"Name changes in the values returned by the hook"},{"id":"new-features","content":"New Features"},{"id":"new-switch-method","content":"New switch method"},{"id":"add-all-property","content":"Add all property"}]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/basic.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Basic Usage","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/conform-react.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Conform React","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/dialog.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Dialog","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/multi-scoped.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Multi-scoped","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/query-params.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Query Params","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/react-hook-form.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"React Hook Form","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/scoped.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Scoped","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"},{"path":"/Users/damianricobelli/Desktop/Personal/stepperize/apps/docs/content/docs/react/usage/shareable-data.mdx","data":{"lastModified":1727411570000,"frontmatter":{"title":"Shareable Data","description":"Coming soon..."},"toc":[],"structuredData":{"contents":[],"headings":[]}},"collection":"docs"}]}