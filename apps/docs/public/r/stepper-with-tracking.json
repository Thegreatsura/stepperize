{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "stepper-with-tracking",
  "type": "registry:component",
  "title": "Stepper with scroll tracking",
  "description": "A stepper with scroll tracking",
  "dependencies": [
    "@stepperize/react"
  ],
  "registryDependencies": [
    "button",
    "label",
    "radio-group",
    "stepper"
  ],
  "files": [
    {
      "path": "registry/new-york/blocks/stepper-with-tracking/stepper-with-tracking.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { Button } from \"@/registry/new-york/ui/button\";\nimport { Label } from \"@/registry/new-york/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/registry/new-york/ui/radio-group\";\nimport { defineStepper } from \"@/registry/new-york/ui/stepper\";\n\nconst { Stepper } = defineStepper(\n  {\n    id: \"step-1\",\n    title: \"Step 1\",\n  },\n  {\n    id: \"step-2\",\n    title: \"Step 2\",\n  },\n  {\n    id: \"step-3\",\n    title: \"Step 3\",\n  },\n  {\n    id: \"step-4\",\n    title: \"Step 4\",\n  },\n  {\n    id: \"step-5\",\n    title: \"Step 5\",\n  },\n  {\n    id: \"step-6\",\n    title: \"Step 6\",\n  }\n);\n\nexport default function StepperWithTracking() {\n  const [tracking, setTracking] = React.useState(false);\n  return (\n    <div className=\"flex w-full flex-col gap-8\">\n      <RadioGroup\n        value={tracking.toString()}\n        onValueChange={(value) => setTracking(value === \"true\")}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"true\" id=\"tracking\" />\n          <Label htmlFor=\"tracking\">Tracking</Label>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <RadioGroupItem value=\"false\" id=\"no-tracking\" />\n          <Label htmlFor=\"no-tracking\">No Tracking</Label>\n        </div>\n      </RadioGroup>\n      <Stepper.Provider\n        className=\"space-y-4\"\n        variant=\"vertical\"\n        tracking={tracking}\n      >\n        {({ methods }) => (\n          <React.Fragment>\n            <Stepper.Navigation>\n              {methods.all.map((step) => (\n                <Stepper.Step\n                  key={step.id}\n                  of={step.id}\n                  onClick={() => methods.goTo(step.id)}\n                >\n                  <Stepper.Title>{step.title}</Stepper.Title>\n                  {methods.when(step.id, () => (\n                    <Stepper.Panel className=\"space-y-4\">\n                      <div className=\"h-[200px] content-center rounded border bg-secondary text-secondary-foreground p-8\">\n                        <p className=\"text-xl font-normal\">\n                          Content for {step.id}\n                        </p>\n                      </div>\n                      <Stepper.Controls>\n                        {!methods.isLast && (\n                          <Button\n                            variant=\"secondary\"\n                            onClick={methods.prev}\n                            disabled={methods.isFirst}\n                          >\n                            Previous\n                          </Button>\n                        )}\n                        <Button\n                          onClick={\n                            methods.isLast ? methods.reset : methods.next\n                          }\n                        >\n                          {methods.isLast ? \"Reset\" : \"Next\"}\n                        </Button>\n                      </Stepper.Controls>\n                    </Stepper.Panel>\n                  ))}\n                </Stepper.Step>\n              ))}\n            </Stepper.Navigation>\n          </React.Fragment>\n        )}\n      </Stepper.Provider>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}